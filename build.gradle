/*
 * ORACP build configuration.
 * Copyright 2016 by Chad Juliano
 *
 * $Id: 29565e145c1d9c03ddfea55cb38012bb83c9dad1 $
 */

plugins {
    id 'project-report'
}

repositories {
    mavenLocal()
    maven {
        url  'http://dl.bintray.com/chadj2/cmd-utils'
    }
    maven {
        // We use the https://maven.oracle.com repository to download ojdbc.jar. Unfortunately
        // the type of authentication it uses is not supported by Gradle. As an alternative
        // we can use the one below.
        // NOTE: You may see warnings during the download but that does not mean it failed.
        url 'https://www.oracle.com/content/secure/maven/content'

        // You will need to enter an OTN login here.
        credentials {
            username 'user'
            password 'password'
        }
    }
    jcenter()
}

// include tasks and configuration to bundle this project as a launch4j executable.
apply from: 'dist/launch4j.gradle'
apply from: 'dist/bintray.gradle'
apply from: 'dist/debug.gradle'

dependencies {

    // this will import slf4j libraries
    compile group: 'org.taskdriver', name: 'task-driver', version: '1.0.0'

    // If you give up getting ojdbc7.jar to download from maven.oracle.com you can manually
    // download the file copy it to ./launch/lib and switch the dependency line below.

    //compile files('lib/ojdbc7.jar')
    compile group: 'com.oracle.jdbc', name: 'ojdbc7', version: '12.1.0.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // contains the logback-test.xml file needed on the classpath
    testRuntime files(project.loggingDir)

    // Note: This is just a placeholder so that launch4j will  add ./lib/config to its classpath.
    runtime files("${project.distDir}/config")
}

/**
 * The below block determines the files that get copied into the distribution.
 * We create a new distribution called 'launch4j' because 'main' has a different organization.
 * https://docs.gradle.org/current/userguide/distribution_plugin.html
 */
distributions {
    noOjdbc7 {
        contents {
            with(distributions.launch4j.contents)
            from(project.projectDir) {
                include 'LICENSE.*'
            }
            from(project.distDir) {
                include '*.sql'
            }
            into('lib') {
                exclude 'config'
                from configurations.runtime.files { dep -> dep.name != 'ojdbc7' }
                from(jar.outputs.files)
            }
            eachFile() { file -> println "DIST: ${file.path}" }
        }
    }

    ojdbc7 {
        contents {
            with(distributions.launch4j.contents)
            from(project.distDir) {
                include '*.sql'
            }
            into('lib') {
                exclude 'config'
                from configurations.runtime.files
                from(jar.outputs.files)
            }
            eachFile() { file -> println "DIST: ${file.path}" }
        }
    }
}

/**
 * Junit test plugin
 * https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
 */
test {
    filter {
        // don't include tests requiring a DB connection.
        includeTestsMatching '*.t01_help'
    }
    testLogging {
        showStandardStreams true
    }

    // listen to standard out and standard error of the test JVM(s)
    afterTest { descriptor, result ->
       logger.lifecycle("${descriptor} result: ${result}")
    }
}

/**
 * From the maven-publish plugin.
 * https://docs.gradle.org/current/userguide/maven_plugin.html
 */
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact noOjdbc7DistZip
        }
    }
}
